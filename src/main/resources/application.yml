fs:
  defaultFS: hdfs://8.131.121.224:8082
server:
  port: 8081
spring:
  redis:
    host: 8.131.121.224
    port: 6379
    jedis:
      pool:
        max-active: 8
    password: 123456
  kafka:
    bootstrap-servers: 182.254.228.96:9092
    consumer:
      #消费组ID
      group-id: video
      # 是否自动提交offset
      enable-auto-commit: true
      # 当kafka中没有初始offset或offset超出范围时将自动重置offset
      # earliest:重置为分区中最小的offset;
      # latest:重置为分区中最新的offset(消费分区中新产生的数据);
      # none:只要有一个分区不存在已提交的offset,就抛出异常;
      auto-offset-reset: latest
      # 提交offset延时(接收到消息后多久提交offset)
      auto-commit-interval: 1000
      #指定消息key和消息体的编解码方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      retries: 0
      # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      acks: 1
      # 批量大小
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        linger-ms: 0
  datasource:
    url: jdbc:mysql://8.131.121.224:3306/video?serverTimezone=GMT%2B8&characterEncoding=utf8&useSSL=false
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver